# class Solution:
# 	def sieve(self, A):
#         l=[]
#         m=[]
#         for i in range(2,A+1):
#             l.append(i)
#         for i in l:
#             for j in range(2,i):
#                 if(i%j==0):
#                     m.append(i)
#                     break
#         return (set(l)-set(m)) 
        
class Solution:
    def sieve(self, A):
        primes = []
        is_prime = [True] * (A + 1)
        is_prime[0] = is_prime[1] = False

        for i in range(2, int(A**0.5) + 1):
            if is_prime[i]:
                for j in range(i*i, A + 1, i):
                    is_prime[j] = False

        for i in range(2, A + 1):
            if is_prime[i]:
                primes.append(i)

        return primes
        
